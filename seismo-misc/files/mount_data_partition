#!/bin/bash
#
# This script mounts /dev/sda4 under /data and creates it beforehand if it doesn't exist
# (on first boot)
# only works if we are running from CF card (so /dev/sda exists) and not on nfsboot
# called by /etc/init.d/boot

RPS=110 								# desired Root Partition Size in MB

get_sector(){

				DEV=/dev/sda	
				TMP=$(fdisk -l $DEV | grep -e ^$DEV | grep -v [Ee]xtended  | awk '{gsub(/\*|\+/,"");print($1,$2,$3,$4)}')
				declare -a FDATA
				FDATA=(`echo $TMP`)
				LNG=${#FDATA[*]}
				declare -a P_START
				declare -a P_END
				declare -a P_BLKS
				declare -a P_NAME

				cnt=0;
				for (( i=0; i<$LNG; i++ ))
				do
								case ${FDATA[$i]} in
												$DEV*) { 	
																P_NAME[$cnt]=${FDATA[$i]}
																P_START[$cnt]=${FDATA[`expr $i + 1`]}
																P_END[$cnt]=${FDATA[`expr $i + 2`]}
																P_BLKS[$cnt]=${FDATA[`expr $i + 3`]}

																cnt=`expr $cnt + 1`
																};;
												*) ;;
								esac
				done
				#echo "$cnt Partitionen gefunden."

				#echo -e "NAME:\t ${P_NAME[@]}"
				#echo -e "START:\t ${P_START[@]}"
				#echo -e "END:\t ${P_END[@]}"
				#echo -e "BLKS:\t ${P_BLKS[@]}"
				echo ${P_END[(($cnt-1))]}
}


 # Are we running with CF card (check for /dev/sda) ?
    if [ -b /dev/sda ] 
    then	
	    #skipping awk (cause it works) and blkid (cause its alternative path is given) busybox mount is working as intended and
	    #seems to be required for nfs functionality
	    for i in $(which fdisk) $(which mkfs.ext4) $(which e2fsck) 
	    do
		if [ $(ls -lisa $i | grep  busybox | wc -l) -gt 0 ]
		then
			echo "$i is symlink to busybox...which won't work..."
			echo "mount_data_partition aborted."
			exit -2
		#else maybe we should find alternative fdisk, e2fsck, mount ... installations and use them.
		fi
	    done
			START_SECTOR=$(($(get_sector)+1))	# get sector to append new partitions
				
	
	# Does /dev/sda4 exist ? (if not first boot, create it)
        if [ ! -b /dev/sda4 ] 
        then
				if [ ! -b /dev/sda3 ]
				then
            		logger -t mount_data_partition Creating /dev/sda3 and /dev/sda4
            		echo "mount_data_partition: Creating /dev/sda3 and /dev/sda4 "
fdisk /dev/sda <<EOF
n
p
3
$START_SECTOR
+${RPS}M
p
n
p
$(($START_SECTOR+$RPS*2048))

p
w
EOF
reboot
		else
			logger -t mount_data_partition removing /dev/sda3
            		echo "mount_data_partition: removing /dev/sda3"
            		fdisk /dev/sda <<EOF
d
3
w
EOF
reboot
		fi

	else
		DATA_FS_4=$(/usr/sbin/blkid | awk '/sda4/ {sub(/TYPE=\"/,"",$3); sub(/\"/,"",$3); print $3}')
		DATA_FS_3=$(/usr/sbin/blkid | awk '/sda3/ {sub(/TYPE=\"/,"",$3); sub(/\"/,"",$3); print $3}')
		if [ "$DATA_FS_3" != "ext4" ]
		then
			echo "mount_data_partition: Creating Ext4 on /dev/sda3"
			mkfs.ext4 /dev/sda3
		else
			echo "already ext4 on /dev/sda3"
		fi
			
		if [ "$DATA_FS_4" != "ext4" ]
		then
		#logger -t mount_data_partition Creating Ext2 on /dev/sda4a
			echo "mount_data_partition: Creating Ext2 on /dev/sda4"
			mkfs.ext4 /dev/sda4
			echo "mount_data_partition: Mounting /dev/sda4 to /data"
		        mkdir -p /data
		        mount -t ext4 -o rw,noatime,errors=remount-ro /dev/sda4 /data
		else
		        #logger -t mount_data_partition Mounting /dev/sda4
			#maybe first remount ro to perform fsck(?)
			echo "Starting Filesystemcheck..."
			if [ "$(ls -lisa /dev/root | awk '{print $NF}')" = "/dev/sda2" ]
			then
				FLAG=$(mount | awk '/\/dev\/root/{sub(/\(/,"",$6);sub(/,[[:print:]]+\)/,"",$6);print $6}')
				mount -o remount,ro /dev/root /
				e2fsck -p /dev/root
				mount -o remount,$FLAG /dev/root /
				e2fsck -p /dev/sda3
				e2fsck -p /dev/sda4
			elif [ "$(ls -lisa /dev/root | awk '{print $NF}')" = "/dev/sda3" ]
			then
				FLAG=$(mount | awk '/\/dev\/root/{sub(/\(/,"",$6);sub(/,[[:print:]]+\)/,"",$6);print $6}')
				mount -o remount,ro /dev/root /
				e2fsck -p /dev/root
				mount -o remount,$FLAG /dev/root /
				e2fsck -p /dev/sda2
				e2fsck -p /dev/sda4
			fi
			echo "...Filesystems checked."
			echo "mount_data_partition: Mounting /dev/sda4 to /data"
	        	mkdir -p /data
			mount -t ext4 -o rw,noatime,errors=remount-ro /dev/sda4 /data
			if [ $? == 0 ] 
			then 	
				killall syslogd
				syslogd -s 512 -O /data/syslogd.log 2>&1
				if [ $? == 0 ]
				then
					echo "syslogd started ... logfile: /data/syslogd.log "
				else
					echo "couldn't start syslogd ... but /data is mounted" 
				fi
			else 
				echo "could not mount /data ... so syslogd is currently not writing to file"
			fi

		fi
	fi
   fi
