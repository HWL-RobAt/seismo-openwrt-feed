#!/bin/sh /etc/rc.common
# Copyright (C) 2006 OpenWrt.org
START=49

DAEMON="/usr/sbin/tincd"
NAME="tinc"
DESC="tinc daemons"
TCONF="/etc/tinc"
NETSFILE="$TCONF/nets.boot"
NETS=""

find_nets () {
  if [ ! -f $NETSFILE ] ; then
    echo "Please create $NETSFILE."
    exit 0
  fi
  NETS="`egrep '^[ ]*[a-zA-Z0-9_-]+[ ]*$' $NETSFILE`"
}

gen_key () {
	for n in $NETS ; do
		PRIVFILE="$TCONF/$n/rsa_key.priv"
		if [ ! -f $PRIVFILE ] ; then
			echo "Generating key pair for: $n."
			$DAEMON -n $n -K <<EOF




EOF
		fi
	done
}

get_mac() {
        # e.g. "23:E1:5E  " (note the 2 spaces at the end)
        HEXNUM=$(ifconfig eth0 | grep -o -e "[[:xdigit:]]*:[[:xdigit:]]*:[[:xdigit:]]*:[[:xdigit:]]*:[[:xdigit:]]*:[[:xdigit:]]*  $" | tr -d " " | tr ":" "_")
	echo $HEXNUM
}

write_conf () {
	MAC_NAME=$(get_mac)
	for n in $NETS ; do
		echo "Writing conf for: $n."
		cat > $TCONF/$n/tinc.conf << EOF
########## DO NOT EDIT BY HAND:                         
########## THIS FILE IS AUTOGENERATED BY /etc/init.d/tinc
########## change /etc/init.d/tinc for editing 

# short name/ID of router
# change to MAC of eth0 with _ instead of :
Name = $MAC_NAME

# Connect with the following other nodes
# only useful for the center of the star topology
#ConnectTo = test184

# place of the private file that must be kept secret!
PrivateKeyFile = /etc/tinc/seismo/rsa_key.priv

# working mode
#Mode = Router
Mode = Switch

# Timeout optional
PingTimeout = 30

# run with tcp only as this is the only way to get around a masquarading firewall
TCPOnly = yes

# use other port than 655?
#Port = 8655
# listen only on specific IP address, e.g. that of ppp0?
#BindToAddress = 172.27.76.22

Device = /dev/net/tun

# name of the tunnel interface (used in olsrd config)
Interface = tinc0
AddressFamily = ipv4

#Hostnames = yes


EOF
	done
	

}
start () {
    find_nets
    write_conf
    gen_key
    echo -n "Starting $DESC:"
        #do load the tun module - dpa
        insmod tun 2>/dev/null >/dev/null

    for n in $NETS ; do
      echo " $n."
      $DAEMON -n $n $EXTRA
    done
}

stop() {
    find_nets
    echo -n "Stopping $DESC:"
    for n in $NETS ; do
      echo -n " $n"
      $DAEMON -n $n $EXTRA -k
    done
    echo "."
}

restart () {
    find_nets
    echo -n "Restarting $DESC:"
    for n in $NETS ; do
      echo -n " $n"
      $DAEMON -n $n $EXTRA -k
      sleep 1
      $DAEMON -n $n $EXTRA
    done
    echo "."
}

reload () {
    find_nets
    echo -n "Reloading $DESC configuration:"
    for n in $NETS ; do
      echo -n " $n"
      $DAEMON -n $n $EXTRA -kHUP
    done
    echo "."
}
